# import os
from groq import Groq

past_month_sales_data = """
2023-09-01,1,1,146
2023-09-01,1,2,88
2023-09-01,1,3,116
2023-09-01,1,4,248
2023-09-01,2,1,220
2023-09-01,2,2,224
2023-09-01,2,3,197
2023-09-01,2,4,190
2023-09-02,1,1,183
2023-09-02,1,2,266
2023-09-02,1,3,116
2023-09-02,1,4,185
2023-09-02,2,1,192
2023-09-02,2,2,158
2023-09-02,2,3,246
2023-09-02,2,4,238
2023-09-03,1,1,100
2023-09-03,1,2,174
2023-09-03,1,3,120
2023-09-03,1,4,296
2023-09-03,2,1,278
2023-09-03,2,2,55
2023-09-03,2,3,209
2023-09-03,2,4,296
2023-09-04,1,1,51
2023-09-04,1,2,205
2023-09-04,1,3,88
2023-09-04,1,4,113
2023-09-04,2,1,64
2023-09-04,2,2,107
2023-09-04,2,3,184
2023-09-04,2,4,53
2023-09-05,1,1,191
2023-09-05,1,2,282
2023-09-05,1,3,288
2023-09-05,1,4,293
2023-09-05,2,1,201
2023-09-05,2,2,179
2023-09-05,2,3,293
2023-09-05,2,4,247
2023-09-06,1,1,136
2023-09-06,1,2,138
2023-09-06,1,3,197
2023-09-06,1,4,74
2023-09-06,2,1,245
2023-09-06,2,2,179
2023-09-06,2,3,279
2023-09-06,2,4,287
2023-09-07,1,1,167
2023-09-07,1,2,58
2023-09-07,1,3,251
2023-09-07,1,4,206
2023-09-07,2,1,145
2023-09-07,2,2,106
2023-09-07,2,3,156
2023-09-07,2,4,136
2023-09-08,1,1,66
2023-09-08,1,2,135
2023-09-08,1,3,230
2023-09-08,1,4,112
2023-09-08,2,1,181
2023-09-08,2,2,152
2023-09-08,2,3,238
2023-09-08,2,4,137
2023-09-09,1,1,110
2023-09-09,1,2,134
2023-09-09,1,3,252
2023-09-09,1,4,151
2023-09-09,2,1,128
2023-09-09,2,2,55
2023-09-09,2,3,217
2023-09-09,2,4,65
2023-09-10,1,1,278
2023-09-10,1,2,170
2023-09-10,1,3,253
2023-09-10,1,4,132
2023-09-10,2,1,69
2023-09-10,2,2,181
2023-09-10,2,3,248
2023-09-10,2,4,268
2023-09-11,1,1,208
2023-09-11,1,2,217
2023-09-11,1,3,202
2023-09-11,1,4,53
2023-09-11,2,1,201
2023-09-11,2,2,252
2023-09-11,2,3,186
2023-09-11,2,4,262
2023-09-12,1,1,190
2023-09-12,1,2,166
2023-09-12,1,3,217
2023-09-12,1,4,137
2023-09-12,2,1,238
2023-09-12,2,2,130
2023-09-12,2,3,268
2023-09-12,2,4,167
2023-09-13,1,1,71
2023-09-13,1,2,67
2023-09-13,1,3,296
2023-09-13,1,4,250
2023-09-13,2,1,166
2023-09-13,2,2,291
2023-09-13,2,3,263
2023-09-13,2,4,112
2023-09-14,1,1,263
2023-09-14,1,2,140
2023-09-14,1,3,265
2023-09-14,1,4,297
2023-09-14,2,1,75
2023-09-14,2,2,297
2023-09-14,2,3,205
2023-09-14,2,4,245
2023-09-15,1,1,178
2023-09-15,1,2,168
2023-09-15,1,3,159
2023-09-15,1,4,116
2023-09-15,2,1,246
2023-09-15,2,2,139
2023-09-15,2,3,128
2023-09-15,2,4,122
2023-09-16,1,1,182
2023-09-16,1,2,72
2023-09-16,1,3,286
2023-09-16,1,4,69
2023-09-16,2,1,167
2023-09-16,2,2,275
2023-09-16,2,3,209
2023-09-16,2,4,219
2023-09-17,1,1,70
2023-09-17,1,2,171
2023-09-17,1,3,298
2023-09-17,1,4,206
2023-09-17,2,1,232
2023-09-17,2,2,233
2023-09-17,2,3,73
2023-09-17,2,4,58
2023-09-18,1,1,233
2023-09-18,1,2,74
2023-09-18,1,3,207
2023-09-18,1,4,279
2023-09-18,2,1,148
2023-09-18,2,2,252
2023-09-18,2,3,56
2023-09-18,2,4,298
2023-09-19,1,1,76
2023-09-19,1,2,128
2023-09-19,1,3,53
2023-09-19,1,4,115
2023-09-19,2,1,198
2023-09-19,2,2,289
2023-09-19,2,3,156
2023-09-19,2,4,80
2023-09-20,1,1,257
2023-09-20,1,2,95
2023-09-20,1,3,127
2023-09-20,1,4,59
2023-09-20,2,1,223
2023-09-20,2,2,261
2023-09-20,2,3,283
2023-09-20,2,4,179
2023-09-21,1,1,129
2023-09-21,1,2,210
2023-09-21,1,3,180
2023-09-21,1,4,136
2023-09-21,2,1,92
2023-09-21,2,2,271
2023-09-21,2,3,125
2023-09-21,2,4,224
2023-09-22,1,1,258
2023-09-22,1,2,99
2023-09-22,1,3,105
2023-09-22,1,4,79
2023-09-22,2,1,269
2023-09-22,2,2,146
2023-09-22,2,3,156
2023-09-22,2,4,285
2023-09-23,1,1,221
2023-09-23,1,2,115
2023-09-23,1,3,266
2023-09-23,1,4,88
2023-09-23,2,1,97
2023-09-23,2,2,133
2023-09-23,2,3,87
2023-09-23,2,4,53
2023-09-24,1,1,172
2023-09-24,1,2,70
2023-09-24,1,3,203
2023-09-24,1,4,214
2023-09-24,2,1,96
2023-09-24,2,2,300
2023-09-24,2,3,81
2023-09-24,2,4,253
2023-09-25,1,1,208
2023-09-25,1,2,92
2023-09-25,1,3,113
2023-09-25,1,4,113
2023-09-25,2,1,149
2023-09-25,2,2,78
2023-09-25,2,3,253
2023-09-25,2,4,161
2023-09-26,1,1,52
2023-09-26,1,2,179
2023-09-26,1,3,65
2023-09-26,1,4,242
2023-09-26,2,1,71
2023-09-26,2,2,185
2023-09-26,2,3,167
2023-09-26,2,4,240
2023-09-27,1,1,99
2023-09-27,1,2,232
2023-09-27,1,3,226
2023-09-27,1,4,95
2023-09-27,2,1,114
2023-09-27,2,2,283
2023-09-27,2,3,282
2023-09-27,2,4,87
2023-09-28,1,1,196
2023-09-28,1,2,219
2023-09-28,1,3,165
2023-09-28,1,4,271
2023-09-28,2,1,90
2023-09-28,2,2,289
2023-09-28,2,3,78
2023-09-28,2,4,293
2023-09-29,1,1,291
2023-09-29,1,2,275
2023-09-29,1,3,125
2023-09-29,1,4,79
2023-09-29,2,1,86
2023-09-29,2,2,81
2023-09-29,2,3,103
2023-09-29,2,4,260
2023-09-30,1,1,241
2023-09-30,1,2,215
2023-09-30,1,3,282
2023-09-30,1,4,134
2023-09-30,2,1,80
2023-09-30,2,2,71
2023-09-30,2,3,70
2023-09-30,2,4,223"""

forecasted_sales_data = """
2023-10-01,1,1,150
2023-10-01,1,2,183
2023-10-01,1,3,298
2023-10-01,1,4,227
2023-10-01,2,1,93
2023-10-01,2,2,267
2023-10-01,2,3,239
2023-10-01,2,4,190
2023-10-02,1,1,285
2023-10-02,1,2,254
2023-10-02,1,3,121
2023-10-02,1,4,84
2023-10-02,2,1,102
2023-10-02,2,2,172
2023-10-02,2,3,232
2023-10-02,2,4,159
2023-10-03,1,1,300
2023-10-03,1,2,158
2023-10-03,1,3,64
2023-10-03,1,4,167
2023-10-03,2,1,100
2023-10-03,2,2,69
2023-10-03,2,3,279
2023-10-03,2,4,269
2023-10-04,1,1,297
2023-10-04,1,2,52
2023-10-04,1,3,285
2023-10-04,1,4,157
2023-10-04,2,1,147
2023-10-04,2,2,105
2023-10-04,2,3,63
2023-10-04,2,4,268
2023-10-05,1,1,276
2023-10-05,1,2,84
2023-10-05,1,3,271
2023-10-05,1,4,95
2023-10-05,2,1,243
2023-10-05,2,2,143
2023-10-05,2,3,236
2023-10-05,2,4,284
2023-10-06,1,1,296
2023-10-06,1,2,74
2023-10-06,1,3,179
2023-10-06,1,4,174
2023-10-06,2,1,291
2023-10-06,2,2,126
2023-10-06,2,3,173
2023-10-06,2,4,78
2023-10-07,1,1,269
2023-10-07,1,2,265
2023-10-07,1,3,188
2023-10-07,1,4,80
2023-10-07,2,1,97
2023-10-07,2,2,246
2023-10-07,2,3,97
2023-10-07,2,4,145
2023-10-08,1,1,157
2023-10-08,1,2,237
2023-10-08,1,3,115
2023-10-08,1,4,67
2023-10-08,2,1,102
2023-10-08,2,2,218
2023-10-08,2,3,112
2023-10-08,2,4,90
2023-10-09,1,1,105
2023-10-09,1,2,234
2023-10-09,1,3,157
2023-10-09,1,4,180
2023-10-09,2,1,298
2023-10-09,2,2,196
2023-10-09,2,3,155
2023-10-09,2,4,92
2023-10-10,1,1,99
2023-10-10,1,2,196
2023-10-10,1,3,126
2023-10-10,1,4,159
2023-10-10,2,1,130
2023-10-10,2,2,116
2023-10-10,2,3,148
2023-10-10,2,4,279
2023-10-11,1,1,194
2023-10-11,1,2,182
2023-10-11,1,3,52
2023-10-11,1,4,192
2023-10-11,2,1,141
2023-10-11,2,2,190
2023-10-11,2,3,276
2023-10-11,2,4,65
2023-10-12,1,1,176
2023-10-12,1,2,166
2023-10-12,1,3,240
2023-10-12,1,4,205
2023-10-12,2,1,222
2023-10-12,2,2,170
2023-10-12,2,3,222
2023-10-12,2,4,258
2023-10-13,1,1,241
2023-10-13,1,2,108
2023-10-13,1,3,118
2023-10-13,1,4,126
2023-10-13,2,1,190
2023-10-13,2,2,110
2023-10-13,2,3,100
2023-10-13,2,4,240
2023-10-14,1,1,266
2023-10-14,1,2,139
2023-10-14,1,3,255
2023-10-14,1,4,286
2023-10-14,2,1,93
2023-10-14,2,2,213
2023-10-14,2,3,107
2023-10-14,2,4,281
2023-10-15,1,1,210
2023-10-15,1,2,163
2023-10-15,1,3,107
2023-10-15,1,4,205
2023-10-15,2,1,211
2023-10-15,2,2,81
2023-10-15,2,3,123
2023-10-15,2,4,153
2023-10-16,1,1,197
2023-10-16,1,2,72
2023-10-16,1,3,67
2023-10-16,1,4,65
2023-10-16,2,1,57
2023-10-16,2,2,63
2023-10-16,2,3,110
2023-10-16,2,4,127
2023-10-17,1,1,115
2023-10-17,1,2,238
2023-10-17,1,3,62
2023-10-17,1,4,213
2023-10-17,2,1,103
2023-10-17,2,2,276
2023-10-17,2,3,92
2023-10-17,2,4,89
2023-10-18,1,1,134
2023-10-18,1,2,164
2023-10-18,1,3,297
2023-10-18,1,4,234
2023-10-18,2,1,292
2023-10-18,2,2,84
2023-10-18,2,3,258
2023-10-18,2,4,163
2023-10-19,1,1,238
2023-10-19,1,2,282
2023-10-19,1,3,162
2023-10-19,1,4,95
2023-10-19,2,1,272
2023-10-19,2,2,292
2023-10-19,2,3,150
2023-10-19,2,4,220
2023-10-20,1,1,257
2023-10-20,1,2,185
2023-10-20,1,3,154
2023-10-20,1,4,137
2023-10-20,2,1,154
2023-10-20,2,2,114
2023-10-20,2,3,266
2023-10-20,2,4,284
2023-10-21,1,1,278
2023-10-21,1,2,112
2023-10-21,1,3,240
2023-10-21,1,4,88
2023-10-21,2,1,101
2023-10-21,2,2,62
2023-10-21,2,3,146
2023-10-21,2,4,252
2023-10-22,1,1,241
2023-10-22,1,2,281
2023-10-22,1,3,211
2023-10-22,1,4,287
2023-10-22,2,1,240
2023-10-22,2,2,106
2023-10-22,2,3,272
2023-10-22,2,4,137
2023-10-23,1,1,231
2023-10-23,1,2,250
2023-10-23,1,3,91
2023-10-23,1,4,64
2023-10-23,2,1,62
2023-10-23,2,2,64
2023-10-23,2,3,244
2023-10-23,2,4,267
2023-10-24,1,1,74
2023-10-24,1,2,175
2023-10-24,1,3,82
2023-10-24,1,4,58
2023-10-24,2,1,104
2023-10-24,2,2,269
2023-10-24,2,3,53
2023-10-24,2,4,285
2023-10-25,1,1,249
2023-10-25,1,2,175
2023-10-25,1,3,65
2023-10-25,1,4,67
2023-10-25,2,1,257
2023-10-25,2,2,120
2023-10-25,2,3,213
2023-10-25,2,4,239
2023-10-26,1,1,136
2023-10-26,1,2,88
2023-10-26,1,3,93
2023-10-26,1,4,101
2023-10-26,2,1,85
2023-10-26,2,2,188
2023-10-26,2,3,148
2023-10-26,2,4,69
2023-10-27,1,1,188
2023-10-27,1,2,287
2023-10-27,1,3,143
2023-10-27,1,4,149
2023-10-27,2,1,106
2023-10-27,2,2,186
2023-10-27,2,3,65
2023-10-27,2,4,207
2023-10-28,1,1,216
2023-10-28,1,2,272
2023-10-28,1,3,113
2023-10-28,1,4,218
2023-10-28,2,1,159
2023-10-28,2,2,112
2023-10-28,2,3,268
2023-10-28,2,4,128
2023-10-29,1,1,258
2023-10-29,1,2,211
2023-10-29,1,3,118
2023-10-29,1,4,89
2023-10-29,2,1,173
2023-10-29,2,2,196
2023-10-29,2,3,116
2023-10-29,2,4,194
2023-10-30,1,1,148
2023-10-30,1,2,214
2023-10-30,1,3,144
2023-10-30,1,4,194
2023-10-30,2,1,87
2023-10-30,2,2,186
2023-10-30,2,3,171
2023-10-30,2,4,238"""

monthly_stock = """1,1,5000
1,2,6000
1,3,2000
1,4,4000
2,1,5000
2,2,2000
2,3,1000
2,4,10000"""

dynamic_allocation = """ """

def generate_report(past_month_sales_data, forecasted_sales_data, monthly_stock, dynamic_allocation):

    message = """
    Given under the heading "past month sales data" is the data for sales of products of the company XYZ in the last month. Given under the heading "forecasted sales data" are the forecasted sales for the next month. Given under the heading "monthly stock" is the total amount of stock stored for each product at each warehouse. Please understand the data first. 

    past month sales data: 
    <Date,Warehouse_ID,Product_ID,Sales
    {past_month_sales_data}>

    forecasted sales data:
    <Date,Warehouse_ID,Product_ID,Sales
    {forecasted_sales_data}>

    monthly stock:
    <Warehouse_ID,Product_ID,Stock
    {monthly_stock}>
    >

    dynamic allocation:
    <
    {dynamic_allocation}>

    Now, follow the instructions given below  and create your report:
    1. Create a detailed product performance review for each product (Average Daily Sales, Sales Growth Rate, Total Units Sold, and more).
    2. Create a detailed warehouse performance review for each warehouse (Average Daily Sales, Sales Growth Rate, Total Units Sold, and more).
    3. Never only present tabular information. Always provide key insights and suggestions based on the data.
    4. Generate key insights from the "forecasted sales data".
    5. If the "dynamic allocation" header has data present under it, generate key insights on the changes in allocations made for the coming month. IF it is empty, always ignore.
    6. Generate suggestions and improvements on improving inventory management by increasing/decreasing supply of products wherever required. Always provide actual amounts.  
    7. Note that improvements to warehouses are not of concern to the company. The company is only concerned about improvements for the products. Do not mention this in the report.
    """

    message = message.format(
    past_month_sales_data=past_month_sales_data,
    forecasted_sales_data=forecasted_sales_data,
    monthly_stock=monthly_stock,
    dynamic_allocation=dynamic_allocation
    )

    client = Groq(
        api_key="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",
    )

    chat_completion = client.chat.completions.create(
        #
        # Required parameters
        #
        messages=[
            # Set an optional system message. This sets the behavior of the
            # assistant and can be used to provide specific instructions for
            # how it should behave throughout the conversation.
            {
                "role": "system",
                "content": "You are an expert product sales analyst. You look at product data for the past month and predictions for the next month. Your task is to create a detailed and incisive report consisting of sales insights for the company."
            },
            # Set a user message for the assistant to respond to.
            {
                "role": "user",
                "content": message,
            }
        ],

        # The language model which will generate the completion.
        model="llama3-8b-8192",

        #
        # Optional parameters
        #

        # Controls randomness: lowering results in less random completions.
        # As the temperature approaches zero, the model will become
        # deterministic and repetitive.
        temperature=0,

        # The maximum number of tokens to generate. Requests can use up to
        # 2048 tokens shared between prompt and completion.
        max_tokens=2048,

        # Controls diversity via nucleus sampling: 0.5 means half of all
        # likelihood-weighted options are considered.
        top_p=1,

        # A stop sequence is a predefined or user-specified text string that
        # signals an AI to stop generating content, ensuring its responses
        # remain focused and concise. Examples include punctuation marks and
        # markers like "[end]".
        stop=None,

        # If set, partial message deltas will be sent.
        stream=False,
    )

    return chat_completion.choices[0].message.content

generate_report(past_month_sales_data, forecasted_sales_data, monthly_stock, dynamic_allocation)